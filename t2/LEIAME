Trabalho 2 - Otimização de Ajuste Polinomial de Curvas com Cálculo Intervalar

Dupla: Matheus Sebastian Alencar de Carvalho (GRR20220065) e Tiago Mendes Bottamedi (GRR20220068)

Módulos:

    interval.h: Biblioteca que calcula as operações com intervalos, diferente da biblioteca implementada para o ep01, essa biblioteca recebe e retorna os valores em double. As operações intervalares implementadas são: soma, subtração, multiplicação, divisão e exponenciação. 

    sistemas.h: Biblioteca que resolve a matriz por meio de eliminação de Gauss com multiplicadores, calcula o resíduo e o somatório necessário para resolução do ajuste polinomial. 

    utils.h: Biblioteca disponiblizada na especificação do trabalho, com a adição de funções para alocação e liberação de memória e verificação do mesmo. 
    
    ajustePol.c: Main que recebe os valores de entrada e é responsável pela inicialização das estruturas, chamadas de procedimentos necessários para o funcionamento do código e a medição de tempo e FLOPS do programa. 

    intervalOtim.h: Contém macros das funções da biblioteca interval.h.

    sistemasOtim.h: Desenrolar de laços nas funções "calculaResíduo" e "calculaAeB".

    utilsOtim.h: Biblioteca disponibilizada na especificação do trabalho, com a adição de funções para alocação e liberação de vetores da versão otimizada, e um macro para calculo de potências.

    ajustePolOtim.c: Main que recebe os valores de entrada e é responsável pela inicialização das estruturas, chamadas de procedimentos necessários para o funcionamento do código otimizado e a medição das métricas do programa. 

    gera_entrada.c: Programa disponibilizado pelos professores, responsável por geras as entradas que os programas recebem.

Considerações:
	- O Makefile possui uma opção de debug para imprimir os coeficientes e resíduos, basta dar "make debug" e rodar os programas. O script para geração dos gráficos faz o make sem essa opção, para facilitar a filtragem das informações necessárias.
    - O arquivo tar enviado conterá os resultados obtidos no teste realizado (resultado e resultadoOtim). Esses arquivos podem ser utilizados para gerar o gráfico diretamente, executando o comando "python3 Grafico.py". Também é possível executar o script.sh para gerar novos valores nesses arquivos e também gerar o gráfico.