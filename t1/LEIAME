Trabalho 1 - Ajuste Polinomial de Curvas com Cálculo Intervalar

Dupla: Matheus Sebastian Alencar de Carvalho (GRR20220065) e Tiago Mendes Bottamedi (GRR20220068)

Módulos:

    interval.h: Biblioteca que calcula as operações com intervalos, diferente da biblioteca implementada para o ep01, essa biblioteca recebe e retorna os valores em double. As operações intervalares implementadas são: soma, subtração, multiplicação, divisão e exponenciação. 

    sistemas.h: Biblioteca que resolve a matriz por meio de eliminação de Gauss com multiplicadores, calcula o resíduo e o somatório necessário para resolução do ajuste polinomial. 

    utils.h: Biblioteca disponiblizada na especificação do trabalho, com a adição de funções para alocação e liberação de memória e verificação do mesmo. 
    
    ajustePol.c: Main que recebe os valores de entrada e é responsável pela inicialização das estruturas, chamadas de procedimentos necessários para o funcionamento do código e a medição de tempo e FLOPS do programa. 

Escolhas:

    Foram testadas duas opções de código: uma com vetores do tipo double e outra com vetores do tipo intervalo_t. A primeira opção aumentava a quantidade de ponteiros
    e alocações de memória, além de aumentar o número de cálculos para acessar os elementos. Por conta disso, e também por ser mais legível, a segunda opção foi a escolhida para a versão final do trabalho.

    Como o script precisa rodar o programa duas vezes para obter as informações dos dois grupos (FLOPS_DP e ENERGY), ele deve receber o nome do arquivo de entrada como parâmetro. Dentro do script, o parâmetro é utilizado como a entrada padrão do programa (./ajustePol < $1), sendo executado da maneira pedida pelo enunciado. Caso seja desejado, o redirecionamento da saída pode ser feito diretamente na execução do script (bash ./script.sh  <arquivo_entrada> > arquivo_saida).

Limitações: 

    O programa não aceita valores de entrada que não sejam números. Caso seja inserido um valor que não seja um número, o programa irá parar sua execução e retornar um erro.

    O programa não lida com valores fora do formato especificado. Por exemplo, caso sejam passados mais ou menos pontos do que o indicado na entrada, o programa pode apresentar comportamento inesperado.

    As mesmas limitações do ep01 também se aplicam a esse trabalho.