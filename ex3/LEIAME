Alunos: Matheus Sebastian Alencar de Carvalho (GRR20220065) e Tiago Mendes Bottamedi (GRR20220068)

### Limitações do programa ###

  -Em casos onde há divisão por zero, o programa não consegue calcular de forma correta a solução do sistema, tendo como resultado nan ou inf.

  -Caso a entrada não esteja no formato solicitado, o código não funcionará de forma planejada.

  -A interpolação polinomial é pior quanto maior for o grau do polinômio. (fenômeno de Runge).
  
  -Em caso de overflow, o programa pode apresentar soluções erradas e/ou com resíduos consideráveis.

  -Números muito pequenos podem ser arrendodados para zero, fazendo com que a interpolação não seja a mais precisa possível.

  -Se o ponto passado pertencer à tabela de pontos, o método de Lagrange implementado não funcionará, uma vez que ele foi implementado visando uma melhoria baseada em calcular o numerador de Li apenas 1 vez. 

  -Mesmo que os pontos passados sejam equidistantes, o método de Newton não utiliza dessa propriedade que reduzir os cálculos em ponto flutuante.

  -Se o valor de N (quantidade de pontos) for passado como um número negativo o progama não funcionará corretamente.

  -Como o enunciado especifica que pontos usados para a construção do polinômio não serão passados como argumento para o programa, o método de Lagrange foi implementado da maneira simplificada vista em aula. Por conta disso, esse método é mais suscetível a overflow/underflow, pois todas as multipĺicações são realizadas antes das divisões.

### Decisões tomadas ###

  -Como nenhum formatador foi especificado para a impressão da solução/resíduo, o formatador escolhido foi "%1.16e".

  -O script apresenta como resultado a saída do programa conforme especificado no enunciado + os MFLOP/s dos métodos de Lagrange e Newton respectivamente. Antes de executar o script é necessário compilar o programa através do Makefile.